Creating model from DanQ()
Building the model
Compiling model
____________________________________________________________________________________________________
Layer (type)                     Output Shape          Param #     Connected to
====================================================================================================
convolution1d_1 (Convolution1D)  (None, 975, 320)      33600       convolution1d_input_1[0][0]
____________________________________________________________________________________________________
maxpooling1d_1 (MaxPooling1D)    (None, 75, 320)       0           convolution1d_1[0][0]
____________________________________________________________________________________________________
bidirectional_1 (Bidirectional)  (None, 75, 640)       1640960     maxpooling1d_1[0][0]
____________________________________________________________________________________________________
flatten_1 (Flatten)              (None, 48000)         0           bidirectional_1[0][0]
____________________________________________________________________________________________________
dense_1 (Dense)                  (None, 925)           44400925    flatten_1[0][0]
____________________________________________________________________________________________________
activation_1 (Activation)        (None, 925)           0           dense_1[0][0]
____________________________________________________________________________________________________
dense_2 (Dense)                  (None, 919)           850994      activation_1[0][0]
____________________________________________________________________________________________________
activation_2 (Activation)        (None, 919)           0           dense_2[0][0]
====================================================================================================
Total params: 46,926,479
Trainable params: 46,926,479
Non-trainable params: 0
____________________________________________________________________________________________________
Saving models in json and yaml format to models/json/danq_10.json and  models/yaml/danq_10.yaml
Saving weights to models/weights/danq_10.hdf5 and epoch logs to models/csv/danq_10.csv
Retrieving train, validation, and test data

The date is 02/28/2017
The time is 01:32:54 AM

Running at most 70 epochs
Epoch 1/70
2199900/2200000 [============================>.] - ETA: 0s - loss: 0.0778 - acc: 0.9790Epoch 00000: val_loss improved from inf to 0.06605, saving model to models/weights/danq_10.hdf5
2200000/2200000 [==============================] - 4766s - loss: 0.0778 - acc: 0.9790 - val_loss: 0.0660 - val_acc: 0.9815
Epoch 2/70
2199900/2200000 [============================>.] - ETA: 0s - loss: 0.0747 - acc: 0.9792Epoch 00001: val_loss did not improve
2200000/2200000 [==============================] - 4756s - loss: 0.0747 - acc: 0.9792 - val_loss: 0.0673 - val_acc: 0.9813
Epoch 3/70
2199900/2200000 [============================>.] - ETA: 0s - loss: 0.0755 - acc: 0.9792Epoch 00002: val_loss did not improve
2200000/2200000 [==============================] - 4756s - loss: 0.0755 - acc: 0.9792 - val_loss: 0.0672 - val_acc: 0.9812
Epoch 4/70
2199900/2200000 [============================>.] - ETA: 0s - loss: 0.0755 - acc: 0.9792Epoch 00003: val_loss did not improve
2200000/2200000 [==============================] - 4755s - loss: 0.0755 - acc: 0.9792 - val_loss: 0.0671 - val_acc: 0.9815
Epoch 5/70
2199900/2200000 [============================>.] - ETA: 0s - loss: 0.0755 - acc: 0.9793Epoch 00004: val_loss did not improve
2200000/2200000 [==============================] - 4757s - loss: 0.0755 - acc: 0.9793 - val_loss: 0.0669 - val_acc: 0.9815
